{"version":3,"sources":["components/front-page/FrontPage.tsx","utils/converger.ts","utils/smCalc.ts","utils/smNoDragCalc.ts","components/sight-mark-calculator/SightMarkCalculator.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["FrontPage","className","to","convergeFunc","func","initialValue","crawl","bounds","upperBound","previousResult","counter","value","isLower","Math","max","lowerBound","min","Error","calculateBounds","initialBounds","refineBounds","calcPos","angle","t","params","g","m","A","Cd","density","arrowSpeed","v_terminal","sqrt","v_initial","sin","u_initial","cos","v","tan","u","velocity","y","log","x","getSight","s_v","s_h","arm","jaw","targetAngle","atan","alpha","phi","sightHeight","theta","getSightHeight","arrowParams","PI","time","shootingAngle","abs","getShotAngle","a","b","c","theta_op","map","acos","reduce","n","distances","Array","from","Set","fill","i","concat","round","yardsToMetres","sort","angles","calculateArrowSpeed","sightMarkInputs","equipmentInputs","farDistance","shortDistance","farDistanceMark","shortDistanceMark","extras","p","firstSight","secondSight","calcArrowSpeed","calculateSightMarks","predefinedConstants","useDrag","validSightMarkInputs","parseFloat","validateSightMarkInputs","validEquipmentInputs","eyeArrowDistance","faceSightDistance","validateEquipmentInputs","referenceMark","smcnd","sightMarks","d","angledMarks","distance","SightMarksSensitivity","props","diffs","dist","face","h","hDiff","flat","vDiff","key","toFixed","CloutAnalysis","SightMarkCalculator","useState","setSightMarkInputs","setEquipmentInputs","showAngles","extraUserOptions","setExtraUserOptions","setSightMarks","setArrowSpeed","runCalculateSightMarks","computedValues","useEffect","setSightMarkInputsHandler","name","e","target","setEquipmentInputsHandler","setExtraUserOptionsHandler","checked","angleHeadings","sm","TextField","placeholder","label","onChange","style","width","margin","FormControlLabel","control","Switch","Button","variant","color","onClick","s","sightMark","ref","Routes","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.92ba70a9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./FrontPage.css\";\n\nexport const FrontPage: React.FC = () => {\n  return (\n    <section className=\"FrontPage\">\n      <h1>Archery Toolbox</h1>\n      <ul>\n        <li>\n          <Link to=\"/smc\">Calculate Sight Marks</Link>\n        </li>\n        <li>\n          Bow Tuning\n          <ul>\n            <li>Alignment</li>\n            <li>Plunger tuning</li>\n            <li>Spine</li>\n            <li>Nocking point</li>\n            <li>Tiller - static and dynamic</li>\n            <li>Centre shot</li>\n          </ul>\n        </li>\n        <li>Outline of some clout tips</li>\n        <li>Bow efficiency</li>\n      </ul>\n    </section>\n  );\n};\n","import { BoundResult, Bounds } from \"./Params\";\n\nexport function calculateBounds(\n  func: (i: number) => BoundResult,\n  initialValue: number,\n  crawl: number\n): Bounds {\n  let counter: number = 0;\n  let lowerBound: number;\n  let upperBound: number;\n  let value: number = initialValue;\n  let previousResult: BoundResult & { value: number } | undefined;\n\n  while (++counter < 1e3) {\n    const { isLower } = func(value);\n    if (previousResult && isLower !== previousResult.isLower) {\n      upperBound = Math.max(previousResult.value, value);\n      lowerBound = Math.min(previousResult.value, value);\n      return { lowerBound, upperBound };\n    }\n    previousResult = { isLower, value };\n    if (isLower) {\n      value += crawl;\n    } else {\n      value -= crawl;\n    }\n  }\n  throw new Error(\"Failed to calculate bounds\");\n}\n\n// Bisection method\nexport function refineBounds(\n  func: (i: number) => BoundResult,\n  initialBounds: Bounds\n): number {\n  const tol = 1e-5;\n  let counter: number = 0;\n  let { lowerBound, upperBound } = initialBounds;\n\n  while (++counter < 1e3) {\n    const value = (lowerBound + upperBound) / 2;\n    if (upperBound - lowerBound < tol) {\n      return value;\n    }\n\n    const { isLower } = func(value);\n    if (isLower) {\n      lowerBound = value;\n    } else {\n      upperBound = value;\n    }\n  }\n  throw new Error(\"Failed to refine bounds\");\n}\n\nexport function convergeFunc(\n  func: (i: number) => BoundResult,\n  initialValue: number,\n  crawl: number\n): number {\n  const bounds: Bounds = calculateBounds(func, initialValue, crawl);\n  return refineBounds(func, bounds);\n}\n","import { convergeFunc } from \"./converger\";\nimport {\n  SightParams,\n  SightResult,\n  ArrowPos,\n  ArrowParams,\n  ArrowSpeedParams\n} from \"./Params\";\n\nexport const yardsToMetres = (v: number) => 0.9144 * v;\nexport const metresToYards = (v: number) => 1.09361 * v;\n\nexport function calcPos(\n  angle: number,\n  t: number,\n  params: ArrowParams\n): ArrowPos {\n  const g = 9.81;\n  const { m, A, Cd, density, arrowSpeed } = params;\n\n  const v_terminal = Math.sqrt((2 * m * g) / (Cd * A * density)); // terminal velocity\n  const v_initial = arrowSpeed * Math.sin(angle);\n  const u_initial = arrowSpeed * Math.cos(angle);\n  const v =\n    (v_terminal * (v_initial - v_terminal * Math.tan((t * g) / v_terminal))) /\n    (v_terminal + v_initial * Math.tan((t * g) / v_terminal));\n  const u =\n    (v_terminal ** 2 * u_initial) / (v_terminal ** 2 + g * u_initial * t);\n  const velocity = Math.sqrt(u ** 2 + v ** 2);\n\n  const y =\n    (v_terminal ** 2 / (2 * g)) *\n    Math.log((v_initial ** 2 + v_terminal ** 2) / (v ** 2 + v_terminal ** 2));\n  const x =\n    (v_terminal ** 2 / g) *\n    Math.log((v_terminal ** 2 + g * u_initial * t) / v_terminal ** 2);\n\n  return { x, y, velocity };\n}\nexport function getShotAngle({ v, s_v, s_h, arm, jaw }: SightParams): number {\n  const arrowParams = {\n    m: 0.02, //20grams - 300 grains\n    A: 0.01 ** 2, // square cm approx\n    Cd: 0.1, //Rough coefficient of drag\n    density: 1.225, // density of air\n    arrowSpeed: v\n  };\n  const initialTime = 0.1;\n  const targetAngle = Math.atan((1.0 * s_v) / s_h);\n  let counter = 0;\n  let angle = targetAngle + (1 * Math.PI) / 180;\n  while (++counter < 1e3) {\n    // eslint-disable-next-line no-loop-func\n    const time = convergeFunc(\n      (t: number) => {\n        const { x } = calcPos(angle, t, arrowParams);\n        const isLower = x < s_h;\n        return { isLower };\n      },\n      initialTime,\n      0.1\n    );\n    const shootingAngle = convergeFunc(\n      (angle: number) => {\n        const { y } = calcPos(angle, time, arrowParams);\n        const isLower = y < s_v;\n        return { isLower };\n      },\n      targetAngle,\n      (5 * Math.PI) / 180\n    );\n\n    const { x } = calcPos(angle, time, arrowParams);\n    if (Math.abs(s_h - x) < 1e3) {\n      return shootingAngle;\n    }\n    angle = shootingAngle;\n  }\n  throw new Error(\"Failed to converge to a shot angle\");\n}\nexport function getSightHeight(\n  { v, s_v, s_h, arm, jaw }: SightParams,\n  angle: number\n): SightResult {\n  //const vel = 58\n  const targetAngle = Math.atan((1.0 * s_v) / s_h);\n  const alpha = targetAngle - Math.atan((jaw * Math.cos(targetAngle)) / s_h);\n  const phi = angle - alpha;\n  const sightHeight = jaw - arm * Math.tan(phi);\n  return { alpha, phi, sightHeight, theta: angle };\n}\nexport function getSight(params: SightParams): SightResult {\n  const angle = getShotAngle(params);\n  return getSightHeight(params, angle);\n}\nexport function calcArrowSpeed(params: ArrowSpeedParams): number {\n  const {\n    farDistance,\n    shortDistance,\n    farDistanceMark,\n    shortDistanceMark,\n    ...extras\n  } = params;\n\n  let initialArrowSpeed = 50;\n  return convergeFunc(\n    (arrowSpeed: number) => {\n      const p = { s_v: 0, v: arrowSpeed, ...extras };\n      const { sightHeight: firstSight } = getSight({\n        s_h: shortDistance,\n        ...p\n      });\n      const { sightHeight: secondSight } = getSight({ s_h: farDistance, ...p });\n\n      const diff = Math.abs(firstSight - secondSight);\n\n      const isLower = diff > Math.abs(farDistanceMark - shortDistanceMark);\n      return { isLower };\n    },\n    initialArrowSpeed,\n    1\n  );\n}\n","import { convergeFunc } from \"./converger\";\nimport { SightParams, SightResult, ArrowSpeedParams } from \"./Params\";\n\nexport const yardsToMetres = (v: number) => 0.9144 * v;\nexport const metresToYards = (v: number) => 1.09361 * v;\nconst g = 9.81; // gravitational force\n\nexport function getSight({ v, s_v, s_h, arm, jaw }: SightParams): SightResult {\n  const a = 4 * v ** 4 * (s_h ** 2 + s_v ** 2);\n  const b = 4 * s_h ** 2 * v ** 2 * (s_v * g - v ** 2);\n  const c = g ** 2 * s_h ** 4;\n\n  const sqrt = Math.sqrt(b ** 2 - 4 * a * c);\n\n  const cos2theta = [(-b + sqrt) / (2 * a), (-b - sqrt) / (2 * a)];\n  const theta_op = cos2theta.map(c => Math.acos(Math.sqrt(c)));\n  const alpha = Math.atan((s_v - jaw * Math.cos(theta_op[0])) / s_h);\n\n  const theta = [theta_op[0], -theta_op[0]].reduce((a, n) =>\n    n > alpha && Math.abs(n - alpha) < Math.abs(a - alpha) ? n : a\n  );\n\n  const phi = theta - alpha;\n  const sightHeight = jaw - arm * Math.tan(phi);\n  return { theta, alpha, phi, sightHeight };\n}\nexport function calcArrowSpeed(params: ArrowSpeedParams): number {\n  //farDistance(m), shortDistance(m), desiredSightMark(mm)\n  const {\n    farDistance,\n    shortDistance,\n    farDistanceMark,\n    shortDistanceMark,\n    ...extras\n  } = params;\n\n  let initialArrowSpeed = 50;\n  return convergeFunc(\n    (arrowSpeed: number) => {\n      const p = { s_v: 0, v: arrowSpeed, ...extras };\n      const { sightHeight: firstSight } = getSight({\n        s_h: shortDistance,\n        ...p\n      });\n      const { sightHeight: secondSight } = getSight({ s_h: farDistance, ...p });\n\n      const diff = Math.abs(firstSight - secondSight);\n\n      // Slow = lower = bigger sight mark gap\n      const isLower = diff > Math.abs(farDistanceMark - shortDistanceMark);\n      return { isLower };\n    },\n    initialArrowSpeed,\n    1\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport {\n  yardsToMetres,\n  metresToYards,\n  getSight,\n  calcArrowSpeed\n} from \"../../utils/smCalc\";\nimport * as smcnd from \"../../utils/smNoDragCalc\";\nimport \"./SightMarkCalculator.css\";\nimport { FormControlLabel } from \"@material-ui/core\";\nimport { SightResult } from \"../../utils/Params\";\n\nconst distances = Array.from(\n  new Set(\n    Array(90 / 5)\n      .fill(null)\n      .map((v, i) => (i + 1) * 5)\n      .concat(\n        Array(100 / 5)\n          .fill(null)\n          .map((v, i) => Math.round(yardsToMetres((i + 1) * 5)))\n      )\n  )\n)\n  .concat([165, 170])\n  .sort((a, b) => a - b);\nconst angles = Array((40 / 5) * 2 + 1)\n  .fill(null)\n  .map((v, i) => ((i - 40 / 5) * 5 * Math.PI) / 180);\n\ntype SightMarkInputs = {\n  farDistance: number;\n  shortDistance: number;\n  farDistanceMark: number;\n  shortDistanceMark: number;\n};\ntype SightMarkInputsUnsafe = { [key in keyof SightMarkInputs]: string };\ntype EquipmentInputs = {\n  faceSightDistance: number;\n  eyeArrowDistance: number;\n};\ntype EquipmentInputsUnsafe = { [key in keyof EquipmentInputs]: string };\ntype EquipmentInputsValidated = {\n  arm: number;\n  jaw: number;\n};\ntype ExtraUserOptions = {\n  useDrag: boolean;\n  showAngles: boolean;\n};\ntype PredefinedConstants = Readonly<{\n  Cd: number;\n  arm: number;\n  jaw: number;\n}>;\ntype SightMarks = {\n  distance: number;\n  angledMarks: SightResult[];\n};\ntype ComputedValues = {\n  arrowSpeed: number;\n  sightMarks: SightMarks[];\n};\nfunction validateSightMarkInputs(\n  params: SightMarkInputsUnsafe\n): SightMarkInputs {\n  if (\n    !(\n      params.farDistance &&\n      params.shortDistance &&\n      params.farDistanceMark &&\n      params.shortDistanceMark\n    )\n  ) {\n    const farDistance = parseFloat(params.farDistance);\n    const shortDistance = parseFloat(params.shortDistance);\n    const farDistanceMark = parseFloat(params.farDistanceMark) / 100;\n    const shortDistanceMark = parseFloat(params.shortDistanceMark) / 100;\n    if (farDistance && shortDistance && farDistanceMark && shortDistanceMark) {\n      return {\n        farDistance,\n        shortDistance,\n        farDistanceMark,\n        shortDistanceMark\n      };\n    }\n  }\n  return {\n    farDistance: 60,\n    shortDistance: 20,\n    farDistanceMark: 0.055,\n    shortDistanceMark: 0.004\n  };\n}\nfunction validateEquipmentInputs(\n  { eyeArrowDistance, faceSightDistance }: EquipmentInputsUnsafe,\n  { arm, jaw }: PredefinedConstants\n): EquipmentInputsValidated {\n  return {\n    arm: parseFloat(faceSightDistance) || arm,\n    jaw: parseFloat(eyeArrowDistance) || jaw\n  };\n}\nfunction calculateArrowSpeed(\n  sightMarkInputs: SightMarkInputs,\n  equipmentInputs: EquipmentInputsValidated,\n  { Cd }: PredefinedConstants\n) {\n  const params = {\n    ...sightMarkInputs,\n    Cd,\n    ...equipmentInputs\n  };\n  const arrowSpeed = calcArrowSpeed(params);\n  return arrowSpeed;\n}\nfunction calculateSightMarks(\n  sightMarkInputs: SightMarkInputsUnsafe,\n  equipmentInputs: EquipmentInputsUnsafe,\n  predefinedConstants: PredefinedConstants,\n  { useDrag }: ExtraUserOptions\n): ComputedValues {\n  const validSightMarkInputs = validateSightMarkInputs(sightMarkInputs);\n  const validEquipmentInputs = validateEquipmentInputs(\n    equipmentInputs,\n    predefinedConstants\n  );\n  const arrowSpeed = calculateArrowSpeed(\n    validSightMarkInputs,\n    validEquipmentInputs,\n    predefinedConstants\n  );\n  const params = {\n    Cd: predefinedConstants.Cd,\n    ...validEquipmentInputs,\n    v: arrowSpeed\n  };\n\n  if (useDrag) {\n    const referenceMark =\n      smcnd.getSight({\n        ...params,\n        s_v: 0,\n        s_h: validSightMarkInputs.shortDistance\n      }).sightHeight + validSightMarkInputs.shortDistanceMark;\n    const sightMarks = distances.map(d => {\n      const angledMarks = angles\n        .map(targetAngle => {\n          const s_v = d * Math.sin(targetAngle);\n          const s_h = d * Math.cos(targetAngle);\n          return smcnd.getSight({ ...params, s_v, s_h });\n        })\n        .map(m => ({ ...m, sightHeight: referenceMark - m.sightHeight }));\n      return {\n        angledMarks,\n        distance: d\n      };\n    });\n    return { sightMarks, arrowSpeed };\n  } else {\n    const referenceMark =\n      getSight({ ...params, s_v: 0, s_h: validSightMarkInputs.shortDistance })\n        .sightHeight + validSightMarkInputs.shortDistanceMark;\n    const sightMarks = distances.map(d => {\n      const angledMarks = angles\n        .map(targetAngle => {\n          const s_v = Math.sin(targetAngle) * d;\n          const s_h = Math.cos(targetAngle) * d;\n          return getSight({ ...params, s_v, s_h });\n        })\n        .map(m => ({ ...m, sightHeight: referenceMark - m.sightHeight }));\n      return {\n        angledMarks,\n        distance: d\n      };\n    });\n    return { sightMarks, arrowSpeed };\n  }\n}\nconst SightMarksSensitivity: React.FC<\n  EquipmentInputsUnsafe & ComputedValues\n> = props => {\n  const { faceSightDistance, arrowSpeed, eyeArrowDistance } = props;\n  const arm = parseFloat(faceSightDistance);\n  const jaw = parseFloat(eyeArrowDistance);\n  const diffs = [\n    {\n      dist: 18,\n      face: 40\n    },\n    {\n      dist: 30,\n      face: 80\n    },\n    {\n      dist: 50,\n      face: 80\n    },\n    {\n      dist: 70,\n      face: 122\n    },\n    {\n      dist: 90,\n      face: 122\n    }\n  ].map(h => {\n    const hDiff =\n      (h.face / 5 / 100 / h.dist) * parseFloat(faceSightDistance) * 1000;\n    const { sightHeight: flat } = smcnd.getSight({\n      v: arrowSpeed,\n      s_v: 0,\n      s_h: h.dist,\n      arm,\n      jaw\n    });\n    const { sightHeight: above } = smcnd.getSight({\n      v: arrowSpeed,\n      s_v: h.face / 5 / 100,\n      s_h: h.dist,\n      arm,\n      jaw\n    });\n    const vDiff = (above - flat) * 1000 + hDiff;\n    return { ...h, hDiff, vDiff };\n  });\n  return (\n    <div>\n      <h3>Sight Marks Sensitivity</h3>\n      <p>Relative distances, mm to move per ring</p>\n      {diffs.map(d => (\n        <p key={d.dist}>\n          {d.dist}m, {d.face}cm: movement: {d.hDiff.toFixed(2)}mm horizontally,\n          vertically: {d.vDiff.toFixed(2)}mm per coloured ring\n        </p>\n      ))}\n    </div>\n  );\n};\nconst CloutAnalysis: React.FC<\n  EquipmentInputsUnsafe & ComputedValues\n> = props => {\n  const { faceSightDistance, arrowSpeed, eyeArrowDistance } = props;\n  const arm = parseFloat(faceSightDistance);\n  const jaw = parseFloat(eyeArrowDistance);\n  const diffs = [\n    {\n      dist: 165,\n      face: 15\n    }\n  ].map(h => {\n    const hDiff = (h.face / 5 / h.dist) * parseFloat(faceSightDistance) * 1000;\n    const { sightHeight: flat } = smcnd.getSight({\n      v: arrowSpeed,\n      s_v: 0,\n      s_h: h.dist,\n      arm,\n      jaw\n    });\n    const { sightHeight: above } = smcnd.getSight({\n      v: arrowSpeed,\n      s_v: 0,\n      s_h: h.dist + h.face / 5,\n      arm,\n      jaw\n    });\n    const vDiff = -(above - flat) * 1000;\n    return { ...h, hDiff, vDiff };\n  });\n  const { theta } = smcnd.getSight({\n    v: arrowSpeed,\n    s_v: 0,\n    s_h: 165,\n    arm,\n    jaw\n  });\n  const time = 165 / (arrowSpeed * Math.cos(theta));\n  return (\n    <div>\n      <h3>Clout analysis</h3>\n      <p>Relative distances, mm to move per ring</p>\n      {diffs.map(d => (\n        <p key={d.dist}>\n          {d.dist}m, {d.face}m: movement: {d.hDiff.toFixed(2)}mm horizontally,{\" \"}\n          {d.vDiff.toFixed(2)}mm vertically per coloured ring\n        </p>\n      ))}\n      <p>20m lollipop, to match size, you want: 1.8m... gold is 0.36m</p>\n      <p>Lollipop: 15cm above ground in a 7.5cm diameter</p>\n      <p>Time in the air: {time.toFixed(1)}s</p>\n    </div>\n  );\n};\nexport const SightMarkCalculator: React.FC = () => {\n  const [sightMarkInputs, setSightMarkInputs] = useState({\n    farDistance: \"60\",\n    shortDistance: \"18\",\n    farDistanceMark: \"5.5\",\n    shortDistanceMark: \"0.4\"\n  });\n  const [equipmentInputs, setEquipmentInputs] = useState({\n    faceSightDistance: \"0.9\",\n    eyeArrowDistance: \"0.14\"\n  });\n  const predefinedConstants: PredefinedConstants = {\n    Cd: 0.1,\n    arm: 0.73 + 0.16,\n    jaw: 0.14\n  };\n  const [extraUserOptions, setExtraUserOptions] = useState({\n    useDrag: false,\n    showAngles: false\n  });\n  const [sightMarks, setSightMarks] = useState<SightMarks[]>([]);\n  const [arrowSpeed, setArrowSpeed] = useState(55.1);\n  const runCalculateSightMarks = () => {\n    const computedValues = calculateSightMarks(\n      sightMarkInputs,\n      equipmentInputs,\n      predefinedConstants,\n      extraUserOptions\n    );\n    setSightMarks(computedValues.sightMarks);\n    setArrowSpeed(computedValues.arrowSpeed);\n  };\n  useEffect(runCalculateSightMarks, []);\n  const computedValues: ComputedValues = { sightMarks, arrowSpeed };\n\n  const {\n    farDistance,\n    farDistanceMark,\n    shortDistance,\n    shortDistanceMark\n  } = sightMarkInputs;\n  const { eyeArrowDistance, faceSightDistance } = equipmentInputs;\n  const { showAngles, useDrag } = extraUserOptions;\n\n  const setSightMarkInputsHandler = (name: keyof SightMarkInputs) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSightMarkInputs({ ...sightMarkInputs, [name]: e.target.value });\n  };\n  const setEquipmentInputsHandler = (name: keyof EquipmentInputs) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setEquipmentInputs({ ...equipmentInputs, [name]: e.target.value });\n  };\n  const setExtraUserOptionsHandler = (name: keyof ExtraUserOptions) => (\n    e: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => {\n    setExtraUserOptions({ ...extraUserOptions, [name]: checked });\n  };\n\n  // computed\n  // , arrowSpeed: 55.1\n\n  const angleHeadings = showAngles\n    ? angles.map(a => `${((a * 180) / Math.PI).toFixed(0)}deg`)\n    : [\"Sight Marks\"];\n\n  const sm =\n    sightMarks && !showAngles\n      ? sightMarks.map(sm => {\n          return { ...sm, angledMarks: [sm.angledMarks[8]] };\n        })\n      : sightMarks || [];\n  //const referenceDistance = sightMarks.find(s=>s.distance===18)\n  return (\n    <section className=\"SightMarkCalculator\">\n      <h2>Sight Marks Calculator</h2>\n      <div className=\"arrowSpeedCalc\">\n        <h3>Arrow Speed parameters</h3>\n        <div className=\"SightMarkCalculator-row\">\n          <TextField\n            placeholder=\"Use a long distance sight mark\"\n            label=\"Far distance (m)\"\n            value={farDistance}\n            onChange={setSightMarkInputsHandler(\"farDistance\")}\n          />\n          <TextField\n            placeholder=\"This is normally found on your sight\"\n            label=\"Far Sight Mark (cm)\"\n            value={farDistanceMark}\n            onChange={setSightMarkInputsHandler(\"farDistanceMark\")}\n          />\n        </div>\n        <div className=\"SightMarkCalculator-row\">\n          <TextField\n            placeholder=\"Use a short distance sight mark\"\n            label=\"Short distance (m)\"\n            value={shortDistance}\n            onChange={setSightMarkInputsHandler(\"shortDistance\")}\n          />\n          <TextField\n            placeholder=\"This is normally found on your sight\"\n            label=\"Short Sight Mark (cm)\"\n            value={shortDistanceMark}\n            onChange={setSightMarkInputsHandler(\"shortDistanceMark\")}\n          />\n        </div>\n      </div>\n      <div className=\"SightMarkCalculator-row\">\n        <TextField\n          placeholder=\"This is about your draw length + sight length\"\n          label=\"Face to sight distance (m)\"\n          value={faceSightDistance}\n          onChange={setEquipmentInputsHandler(\"faceSightDistance\")}\n        />\n        <TextField\n          placeholder=\"This is the distance from your nock to your eye\"\n          label=\"Eye to Arrow distance (m)\"\n          value={eyeArrowDistance}\n          onChange={setEquipmentInputsHandler(\"eyeArrowDistance\")}\n        />\n      </div>\n      <div style={{ width: \"250px\", margin: \"10px 0\" }}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={useDrag}\n              onChange={setExtraUserOptionsHandler(\"useDrag\")}\n            />\n          }\n          label=\"Include drag\"\n        />\n      </div>\n      <div style={{ width: \"250px\", margin: \"10px 0\" }}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showAngles}\n              onChange={setExtraUserOptionsHandler(\"showAngles\")}\n            />\n          }\n          label=\"Show angles\"\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={runCalculateSightMarks}\n      >\n        Calculate Sight Marks\n      </Button>\n      {arrowSpeed && <p>Arrow Speed: {arrowSpeed.toFixed(1)}m/s</p>}\n      <SightMarksSensitivity {...equipmentInputs} {...computedValues} />\n      <CloutAnalysis {...equipmentInputs} {...computedValues} />\n      <table>\n        <thead>\n          <tr>\n            <td />\n            {angleHeadings.map(h => (\n              <th key={h}>{h}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {sm.map(s => (\n            <tr key={s.distance}>\n              <th>\n                {s.distance}m ({metresToYards(s.distance).toFixed(1)}y)\n              </th>\n              {s.angledMarks.map((a, i) => {\n                const sightMark = (a.sightHeight * 100).toFixed(1);\n                const ref =\n                  a.sightHeight - s.angledMarks[showAngles ? 8 : 0].sightHeight;\n                //console.log('a,s', s.distance, a.sightHeight, s.angledMarks[8].sightHeight)\n                return (\n                  <td key={`${s.distance}-${i}`}>\n                    {sightMark} ({ref > 0 ? \"+\" : \"\"}\n                    {(ref * 100).toFixed(1)})\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { HashRouter, Route, Switch, BrowserRouter } from \"react-router-dom\";\n\nimport { FrontPage } from \"../components/front-page/FrontPage\";\nimport { SightMarkCalculator } from \"../components/sight-mark-calculator/SightMarkCalculator\";\n\n//import NoMatch from '../components/NoMatch'\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route exact path=\"/\" component={FrontPage} />\n    <Route path=\"/smc\" component={SightMarkCalculator} />\n  </Switch>\n);\nexport const App: React.FC = () => {\n  const isHashRouter = process.env.REACT_APP_GH_PAGES;\n  // For some reason couldn't define another component with types\n  if (isHashRouter) {\n    return (\n      <HashRouter>\n        <Routes />\n      </HashRouter>\n    );\n  }\n  return (\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}